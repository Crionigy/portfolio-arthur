{"version":3,"sources":["controllers/randomAnimationController.js","controllers/noodlesController.js","controllers/flowController.js","p5-canvas/p5-canvas.js","App.js","header/header.js","footer/footer.js","index.js"],"names":["min","max","points","angleVelocity","setupFlow","p5","canvasWidth","canvasHeight","angleMode","DEGREES","noiseDetail","space","i","j","p","createVector","random","push","window","innerHeight","innerWidth","randomAnimation","Math","ceil","floor","textX","textY","props","setup","canvasParentRef","createCanvas","parent","background","setupNoodles","draw","noStroke","length","angle","map","noise","x","y","r","g","b","fill","add","cos","sin","ellipse","drawFlowField","dist","drawFlowCircle","drawNoodles","textAlign","CENTER","textSize","textFont","text","drawName","App","className","Header","Footer","ReactDOM","render","document","getElementById"],"mappings":"0NACoCA,EAAKC,E,6CCDrCC,EAAS,GCATA,EAAS,GACTC,EAAgB,KAETC,EAAY,SAASC,EAAIC,EAAaC,GAC7CF,EAAGG,UAAUH,EAAGI,SAChBJ,EAAGK,YAAY,GAMf,IAHA,IACIC,EAAQL,EADE,IAGLM,EAAI,EAAGA,EAAIN,EAAaM,GAAKD,EAClC,IAAK,IAAIE,EAAI,EAAGA,EAAIN,EAAcM,GAAKF,EAAM,CACzC,IAAIG,EAAIT,EAAGU,aAAaH,EAAIP,EAAGW,QAAQ,GAAI,IAAKH,EAAIR,EAAGW,QAAQ,GAAI,KACnEd,EAAOe,KAAKH,K,OCPpBP,EAAeW,OAAOC,YAAc,IACpCb,EAAcY,OAAOE,WAGrBC,GHVgCrB,EGUD,EHVMC,EGUH,EHTrCD,EAAMsB,KAAKC,KAAKvB,GAChBC,EAAMqB,KAAKE,MAAMvB,GACVqB,KAAKE,MAAMF,KAAKN,UAAYf,EAAMD,IAAQA,GGS9CyB,EAASnB,EAAc,EACvBoB,EAASnB,EAAe,EAEb,WAACoB,GAkDf,OAAO,cAAC,IAAD,CAAQC,MArCD,SAACvB,EAAIwB,GAIlB,OAHAxB,EAAGyB,aAAaxB,EAAaC,GAAcwB,OAAOF,GAClDxB,EAAG2B,WAAW,mBAENX,GACP,KAAK,EAGL,KAAK,EACJjB,EAAUC,EAAIC,EAAaC,GAC3B,MACD,KAAK,GFrCkB,SAAUF,EAAIC,EAAaC,GAIjD,IAHA,IACII,EAAQL,EADE,GAGLM,EAAI,EAAGA,EAAIN,EAAaM,GAAKD,EAClC,IAAK,IAAIE,EAAI,EAAGA,EAAIN,EAAcM,GAAKF,EAAM,CACzC,IAAIG,EAAIT,EAAGU,aAAaH,EAAGC,GAC3BX,EAAOe,KAAKH,IE+BpBmB,CAAa5B,EAAIC,EAAaC,KAyBJ2B,KAlBhB,SAAC7B,GACb,OAAQgB,GACP,KAAK,GD/BmB,SAAShB,EAAIC,EAAaC,GACjDF,EAAG8B,WAEH,IAAK,IAAIvB,EAAI,EAAGA,EAAIV,EAAOkC,OAAQxB,IAAK,CAEpC,IAAIyB,EAAQhC,EAAGiC,IAAIjC,EAAGkC,MAAMrC,EAAOU,GAAG4B,EAAIrC,EAAeD,EAAOU,GAAG6B,EAAItC,GAAe,EAAG,EAAG,EAAG,KAE3FuC,EAAKrC,EAAGiC,IAAIpC,EAAOU,GAAG4B,EAAG,EAAGlC,EAAa,GAAI,KAC7CqC,EAAKtC,EAAGiC,IAAIpC,EAAOU,GAAG6B,EAAG,EAAGlC,EAAc,GAAI,KAC9CqC,EAAKvC,EAAGiC,IAAIpC,EAAOU,GAAG4B,EAAG,EAAGlC,EAAa,IAAK,IAElDD,EAAGwC,KAAKH,EAAGC,EAAGC,GAEd1C,EAAOU,GAAGkC,IAAIzC,EAAGU,aAAaV,EAAG0C,IAAIV,GAAQhC,EAAG2C,IAAIX,KAEpDhC,EAAG4C,QAAQ/C,EAAOU,GAAG4B,EAAGtC,EAAOU,GAAG6B,EAAG,ICiBzCS,CAAc7C,EAAIC,EAAaC,GAC/B,MACD,KAAK,GDfoB,SAASF,EAAIC,EAAaC,GAClDF,EAAG8B,WAEH,IAAK,IAAIvB,EAAI,EAAGA,EAAIV,EAAOkC,OAAQxB,IAAK,CAEpC,IAAIyB,EAAQhC,EAAGiC,IAAIjC,EAAGkC,MAAMrC,EAAOU,GAAG4B,EAAIrC,EAAeD,EAAOU,GAAG6B,EAAItC,GAAe,EAAG,EAAG,EAAG,KAE3FuC,EAAKrC,EAAGiC,IAAIpC,EAAOU,GAAG4B,EAAG,EAAGlC,EAAa,GAAI,KAC7CqC,EAAKtC,EAAGiC,IAAIpC,EAAOU,GAAG6B,EAAG,EAAGlC,EAAc,GAAI,KAC9CqC,EAAKvC,EAAGiC,IAAIpC,EAAOU,GAAG4B,EAAG,EAAGlC,EAAa,IAAK,IAElDD,EAAGwC,KAAKH,EAAGC,EAAGC,GAEd1C,EAAOU,GAAGkC,IAAIzC,EAAGU,aAAaV,EAAG0C,IAAIV,GAAQhC,EAAG2C,IAAIX,KAGjDhC,EAAG8C,KAAK7C,EAAc,EAAGC,EAAe,EAAGL,EAAOU,GAAG4B,EAAGtC,EAAOU,GAAG6B,GAAK,KACtEpC,EAAG4C,QAAQ/C,EAAOU,GAAG4B,EAAGtC,EAAOU,GAAG6B,EAAG,ICD7CW,CAAe/C,EAAIC,EAAaC,GAChC,MACD,KAAK,GFzCiB,SAAUF,EAAIC,EAAaC,GAChDF,EAAG8B,WACH9B,EAAGwC,KAAK,KAER,IAAK,IAAIjC,EAAI,EAAGA,EAAIV,EAAOkC,OAAQxB,IAAK,CAEpC,IAAIyB,EAAQhC,EAAGiC,IAAIjC,EAAGkC,MApBV,KAoBgBrC,EAAOU,GAAG4B,EApB1B,KAoB6CtC,EAAOU,GAAG6B,GAAmB,EAAG,EAAG,EAAG,KAE3FC,EAAKrC,EAAGiC,IAAIpC,EAAOU,GAAG4B,EAAG,EAAGlC,EAAa,GAAI,KAC7CqC,EAAKtC,EAAGiC,IAAIpC,EAAOU,GAAG6B,EAAG,EAAGlC,EAAc,GAAI,KAC9CqC,EAAKvC,EAAGiC,IAAIpC,EAAOU,GAAG4B,EAAG,EAAGlC,EAAa,IAAK,IAElDD,EAAGwC,KAAKH,EAAGC,EAAGC,GAEd1C,EAAOU,GAAGkC,IAAIzC,EAAGU,aAAaV,EAAG0C,IAAIV,GAAQhC,EAAG2C,IAAIX,KAEpDhC,EAAG4C,QAAQ/C,EAAOU,GAAG4B,EAAGtC,EAAOU,GAAG6B,EAAG,IE0BzCY,CAAYhD,EAAIC,EAAaC,IAtChC,SAAkBF,GACjBA,EAAGwC,KAAK,cACRxC,EAAGiD,UAAUjD,EAAGkD,QAChBlD,EAAGmD,SAAS,IACZnD,EAAGoD,SAAS,aACZpD,EAAGqD,KAAK,gBAAiBjC,EAAOC,GAsChCiC,CAAStD,OCnDIuD,MARf,WACE,OACE,qBAAKC,UAAU,MAAf,SACE,cAAC,EAAD,O,MCISC,MARf,WACE,OACE,qBAAKD,UAAU,SAAf,SACI,4D,MCKOE,MARf,WACE,OACE,qBAAKF,UAAU,SAAf,SACI,4DCERG,IAASC,OACP,qCACE,cAAC,EAAD,IACA,cAAC,EAAD,IACA,cAAC,EAAD,OAEFC,SAASC,eAAe,W","file":"static/js/main.81941088.chunk.js","sourcesContent":["\nexport let getRandomInt = function (min, max) {\n\tmin = Math.ceil(min);\n\tmax = Math.floor(max);\n\treturn Math.floor(Math.random() * (max - min)) + min;\n}","let points = [];\nlet angleVelocity = 0.005;\n\nexport let setupNoodles = function (p5, canvasWidth, canvasHeight) {\n    let density = 80;\n    let space = canvasWidth / density;\n\n    for (let i = 0; i < canvasWidth; i += space){\n        for (let j = 0; j < canvasHeight; j += space){\n            let p = p5.createVector(i, j);\n            points.push(p);\n        }\n    }\n};\n\nexport let drawNoodles = function (p5, canvasWidth, canvasHeight){\n    p5.noStroke();\n    p5.fill(255);\n\n    for (let i = 0; i < points.length; i++) {\n\n        let angle = p5.map(p5.noise(points[i].x * angleVelocity, points[i].y * angleVelocity),0, 1, 0, 720);\n\n        let r =  p5.map(points[i].x, 0, canvasWidth, 50, 255);\n        let g =  p5.map(points[i].y, 0, canvasHeight, 50, 255);\n        let b =  p5.map(points[i].x, 0, canvasWidth, 255, 50);\n\n        p5.fill(r, g, b);\n\n        points[i].add(p5.createVector(p5.cos(angle), p5.sin(angle)));\n\n        p5.ellipse(points[i].x, points[i].y, 2);\n    }\n};\n","let points = [];\nlet angleVelocity = 0.005;\n\nexport let setupFlow = function(p5, canvasWidth, canvasHeight) {\n    p5.angleMode(p5.DEGREES);\n    p5.noiseDetail(1);\n\n    // density: Aumenta a densidade de pontos iniciais na tela\n    let density = 100;\n    let space = canvasWidth / density;\n\n    for (let i = 0; i < canvasWidth; i += space){\n        for (let j = 0; j < canvasHeight; j += space){\n            let p = p5.createVector(i + p5.random(-10, 10), j + p5.random(-10, 10));\n            points.push(p);\n        }\n    }\n}\n\nexport let drawFlowField = function(p5, canvasWidth, canvasHeight){\n    p5.noStroke();\n\n    for (let i = 0; i < points.length; i++) {\n\n        let angle = p5.map(p5.noise(points[i].x * angleVelocity, points[i].y * angleVelocity),0, 1, 0, 720);\n\n        let r =  p5.map(points[i].x, 0, canvasWidth, 50, 255);\n        let g =  p5.map(points[i].y, 0, canvasHeight, 50, 255);\n        let b =  p5.map(points[i].x, 0, canvasWidth, 255, 50);\n\n        p5.fill(r, g, b);\n\n        points[i].add(p5.createVector(p5.cos(angle), p5.sin(angle)));\n\n        p5.ellipse(points[i].x, points[i].y, 2);\n    }\n}\n\nexport let drawFlowCircle = function(p5, canvasWidth, canvasHeight) {\n    p5.noStroke();\n\n    for (let i = 0; i < points.length; i++) {\n\n        let angle = p5.map(p5.noise(points[i].x * angleVelocity, points[i].y * angleVelocity),0, 1, 0, 720);\n\n        let r =  p5.map(points[i].x, 0, canvasWidth, 50, 255);\n        let g =  p5.map(points[i].y, 0, canvasHeight, 50, 255);\n        let b =  p5.map(points[i].x, 0, canvasWidth, 255, 50);\n\n        p5.fill(r, g, b);\n\n        points[i].add(p5.createVector(p5.cos(angle), p5.sin(angle)));\n\n\n        if(p5.dist(canvasWidth / 2, canvasHeight / 2, points[i].x, points[i].y) < 400) {\n            p5.ellipse(points[i].x, points[i].y, 2);\t\n        }\n    }\n}","import React from \"react\";\nimport Sketch from \"react-p5\";\nimport {setupNoodles, drawNoodles} from \"../controllers/noodlesController.js\"\nimport {setupFlow, drawFlowField, drawFlowCircle} from \"../controllers/flowController.js\"\nimport {getRandomInt} from \"../controllers/randomAnimationController\"\n\n//Values use to set the size of the canvas on the screen\nlet canvasHeight = window.innerHeight - 100;\nlet canvasWidth = window.innerWidth;\n\n//Get a random number equals {min} or less than {max}\nlet randomAnimation = getRandomInt(1, 4);\n\nlet textX = (canvasWidth / 2);\nlet textY = (canvasHeight / 2);\n\nexport default (props) => {\n\n\t//#region Name\n\tfunction drawName(p5) {\n\t\tp5.fill('rgb(0,0,0)');\n\t\tp5.textAlign(p5.CENTER);\n\t\tp5.textSize(35);\n\t\tp5.textFont('Helvetica');\n\t\tp5.text('Arthur Hassan', textX, textY);\n\t}\n\t//#endregion\n\n\t//#region Setup & Drawn\n\tconst setup = (p5, canvasParentRef) => {\n\t\tp5.createCanvas(canvasWidth, canvasHeight).parent(canvasParentRef);\n\t\tp5.background('rgb(30, 30, 30)');\n\n\t\tswitch (randomAnimation) {\n\t\t\tcase 1:\n\t\t\t\tsetupFlow(p5, canvasWidth, canvasHeight);\n\t\t\t\tbreak;\n\t\t\tcase 2:\n\t\t\t\tsetupFlow(p5, canvasWidth, canvasHeight);\n\t\t\t\tbreak;\n\t\t\tcase 3:\n\t\t\t\tsetupNoodles(p5, canvasWidth, canvasHeight);\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tbreak;\n\t\t}\n\t};\n\n\tconst draw = (p5) => {\n\t\tswitch (randomAnimation) {\n\t\t\tcase 1:\n\t\t\t\tdrawFlowField(p5, canvasWidth, canvasHeight);\n\t\t\t\tbreak;\n\t\t\tcase 2:\n\t\t\t\tdrawFlowCircle(p5, canvasWidth, canvasHeight);\n\t\t\t\tbreak;\n\t\t\tcase 3:\n\t\t\t\tdrawNoodles(p5, canvasWidth, canvasHeight);\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tbreak;\n\t\t}\n\t\tdrawName(p5);\n\t};\n\t//#endregion\n\n\treturn <Sketch setup={setup} draw={draw} />;\n};","import './App.css';\nimport P5canvas from './p5-canvas/p5-canvas.js';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <P5canvas />\n    </div>\n  );\n}\n\nexport default App;\n","import './header.css';\n\nfunction Header() {\n  return (\n    <div className=\"Header\">\n        <h5>Imagine um Header aqui!</h5>\n    </div>\n  );\n}\n\nexport default Header;\n\n","import './footer.css';\n\nfunction Footer() {\n  return (\n    <div className=\"Footer\">\n        <h5>Imagine um Footer aqui!</h5>\n    </div>\n  );\n}\n\nexport default Footer;\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport Header from './header/header.js';\nimport Footer from './footer/footer.js'\n\nReactDOM.render(\n  <>\n    <Header />\n    <App />\n    <Footer />\n  </>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}